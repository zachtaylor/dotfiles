# ~/.config/zsh/prompt

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' unstagedstr '%F{yellow}!%f'
zstyle ':vcs_info:*' stagedstr '%F{green}+%f'
zstyle ':vcs_info:git*+set-message:*' hooks untracked-git

zstyle ':vcs_info:git*' formats "%F{cyan}%r [%b%f%m%u%c%F{cyan}]%f%F{blue}/%S%f"
zstyle ':vcs_info:git*' actionformats "%F{cyan}%r/%f%F{blue}%S%f [%F{cyan}%b%f (%a) %m%u%c]"

setopt prompt_subst no_prompt_{bang,subst} prompt_{cr,percent,sp}
autoload -Uz add-zsh-hook
# add-zsh-hook precmd set-prompt-2
add-zsh-hook precmd set-prompt-1

+vi-untracked-git() {
  if [[ -n "$(git ls-files --others --exclude-standard)" ]]; then
      hook_com[misc]='%F{magenta}?%f'
  else
      hook_com[misc]=''
  fi
}

function preexec() {
  timer=$(($(date +%s%0N)/1000000))
}

precmd() { vcs_info }

function prompt-length() {
  emulate -L zsh
  local -i COLUMNS=${2:-COLUMNS}
  local -i x y=${#1} m
  if (( y )); then
    while (( ${${(%):-$1%$y(l.1.0)}[-1]} )); do
      x=y
      (( y *= 2 ))
    done
    while (( y > x + 1 )); do
      (( m = x + (y - x) / 2 ))
      (( ${${(%):-$1%$m(l.x.y)}[-1]} = m ))
    done
  fi
  typeset -g REPLY=$x
}

function fill-line() {
  emulate -L zsh
  prompt-length $1
  local -i left_len=REPLY
  prompt-length $2 9999
  local -i right_len=REPLY
  local -i pad_len=$((COLUMNS - left_len - right_len - ${ZLE_RPROMPT_INDENT:-1}))
  if (( pad_len < 1 )); then
    # Not enough space for the right part. Drop it.
    typeset -g REPLY=$1
  else
    local pad=${(pl.$pad_len.. .)}  # pad_len spaces
    typeset -g REPLY=${1}${pad}${2}
  fi
}

function set-prompt-2() {
  emulate -L zsh

  if [ $timer ]; then
    local now=$(($(date +%s%0N)/1000000))
    local duration=$(($now-$timer))

    if (( $duration / 1000 >= 1 )); then
      elapsed="$(duration / 1000)s"
    else
      elapsed="$(duration)ms"
    fi
  fi

  local top_left='%F{blue}%~%f'
  local top_right="%F{yellow}${elapsed}%f %t"
  local bottom_left='%B%F{%(?.white.red)}%#%f%b '
  local bottom_right="${vcs_info_msg_0_}"

  local REPLY
  fill-line "$top_left" "$top_right"
  PROMPT=$REPLY$'\n'$bottom_left
  RPROMPT=$bottom_right
}

function set-prompt-1() {
  emulate -L zsh

  if [ $timer ]; then
    local now=$(($(date +%s%0N)/1000000))
    local duration_ms=$(($now-$timer))
    unset timer
    local duration_s=$(($duration_ms / 1000))

    if [ $duration_s -gt 1 ]; then
      local elapsed="${duration_s}s"
    else
      local elapsed="${duration_ms}ms"
    fi
  fi

  if [ $vcs_info_msg_0_ ]; then
    if [[ $(pwd) =~ "$HOME/*" ]]; then
      PROMPT="%F{blue}~${${$(git rev-parse --show-toplevel)#${HOME}}%/*}/%f${vcs_info_msg_0_} $ "
    else
      PROMPT="%F{blue} ${$(pwd)%/*}/%f${vcs_info_msg_0_} $ "
    fi
  else
    PROMPT="%F{blue}%~%f $ "
  fi

  RPROMPT="%F{yellow}${elapsed}%f %*"
}
